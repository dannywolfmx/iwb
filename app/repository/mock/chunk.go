// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dannywolfmx/iwb/app (interfaces: ChunkRepository)

// Package mock_app is a generated GoMock package.
package mock_app

import (
	reflect "reflect"

	entity "github.com/dannywolfmx/iwb/app/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockChunkRepository is a mock of ChunkRepository interface.
type MockChunkRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChunkRepositoryMockRecorder
}

// MockChunkRepositoryMockRecorder is the mock recorder for MockChunkRepository.
type MockChunkRepositoryMockRecorder struct {
	mock *MockChunkRepository
}

// NewMockChunkRepository creates a new mock instance.
func NewMockChunkRepository(ctrl *gomock.Controller) *MockChunkRepository {
	mock := &MockChunkRepository{ctrl: ctrl}
	mock.recorder = &MockChunkRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChunkRepository) EXPECT() *MockChunkRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockChunkRepository) Get(arg0 entity.Position) (*entity.Chunk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*entity.Chunk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockChunkRepositoryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockChunkRepository)(nil).Get), arg0)
}
